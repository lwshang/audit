name: cargo audit your Rust Dependencies
description: |
  Audit Rust dependencies with cargo audit and the RustSec Advisory DB
branding:
  icon: "shield"
  color: "red"

inputs:
  TOKEN:
    description: "The GitHub access token to allow us to retrieve, create and update issues (automatically set)"
    required: false
    default: ${{ github.token }}
  denyWarnings:
    description: "Any warnings generated will be treated as an error and fail the action"
    required: false
    default: "false"
  file:
    description: "Cargo lockfile to inspect"
    required: false
    default: ""
  ignore:
    description: "A comma separated list of Rustsec IDs to ignore"
    required: false
    default: ""
  createIssues:
    description: Create/Update issues for each found vulnerability.
    required: false
    default: "${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}"

runs:
  using: composite
  steps:
    - run: |
        import audit
        audit.run()
      shell: python
      env:
        INPUT_CREATE_ISSUES: ${{ inputs.createIssues }}
        INPUT_DENY_WARNINGS: ${{ inputs.denyWarnings }}
        INPUT_FILE: ${{ inputs.file }}
        INPUT_IGNORE: ${{ inputs.ignore }}
        INPUT_TOKEN: ${{ inputs.TOKEN }}
        PYTHONPATH: ${{ github.action_path }}
        REPO: ${{ github.repository }}
